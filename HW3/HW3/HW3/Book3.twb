<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook original-version='18.1' source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Boonsong Lekagul waterways readings.csv+ (Multiple Connections)' inline='true' name='federated.0nqcnkb15dm9jf1db1baw1qn42dv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Boonsong Lekagul waterways readings' name='textscan.0gb8o9b1rhr20t16nf5pl1qdfsbs'>
            <connection class='textscan' directory='E:/GitHubRes/SummerCourse/HW3' filename='Boonsong Lekagul waterways readings.csv' password='' server='' />
          </named-connection>
          <named-connection caption='chemical units of measure' name='textscan.0rqgunn0q0lz1i1h6w3x70ijlxix'>
            <connection class='textscan' directory='E:/GitHubRes/SummerCourse/HW3' filename='chemical units of measure.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Boonsong Lekagul waterways readings.csv].[measure]' />
              <expression op='[chemical units of measure.csv].[measure]' />
            </expression>
          </clause>
          <relation connection='textscan.0gb8o9b1rhr20t16nf5pl1qdfsbs' name='Boonsong Lekagul waterways readings.csv' table='[Boonsong Lekagul waterways readings#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='real' name='value' ordinal='1' />
              <column datatype='string' name='location' ordinal='2' />
              <column datatype='date' date-parse-format='dd-MMM-yy' name='sample date' ordinal='3' />
              <column datatype='string' name='measure' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0rqgunn0q0lz1i1h6w3x70ijlxix' name='chemical units of measure.csv' table='[chemical units of measure#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='measure' ordinal='0' />
              <column datatype='string' name='unit' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[id]' value='[Boonsong Lekagul waterways readings.csv].[id]' />
          <map key='[location]' value='[Boonsong Lekagul waterways readings.csv].[location]' />
          <map key='[measure (chemical units of measure.csv)]' value='[chemical units of measure.csv].[measure]' />
          <map key='[measure]' value='[Boonsong Lekagul waterways readings.csv].[measure]' />
          <map key='[sample date]' value='[Boonsong Lekagul waterways readings.csv].[sample date]' />
          <map key='[unit]' value='[chemical units of measure.csv].[unit]' />
          <map key='[value]' value='[Boonsong Lekagul waterways readings.csv].[value]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Boonsong Lekagul waterways readings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Boonsong Lekagul waterways readings.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[Boonsong Lekagul waterways readings.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Boonsong Lekagul waterways readings.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sample date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[sample date]</local-name>
            <parent-name>[Boonsong Lekagul waterways readings.csv]</parent-name>
            <remote-alias>sample date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[Boonsong Lekagul waterways readings.csv]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[chemical units of measure.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[measure (chemical units of measure.csv)]</local-name>
            <parent-name>[chemical units of measure.csv]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[chemical units of measure.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[measure (chemical units of measure.csv)]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <mapped-images>
        <mapped-image caption='WaterwaysFinal' expression='file:///E:/GitHubRes/SummerCourse/HW3/WaterwaysFinal.jpg' name='[MappedImage1]'>
          <mapping bottom='0' left='0' right='200' top='200' x='[id]' y='[id]' />
        </mapped-image>
      </mapped-images>
      <layout dim-ordering='alphabetic' dim-percentage='0.590659' measure-ordering='alphabetic' measure-percentage='0.409341' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Achara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Decha&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Chai&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Somchair&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kohsoom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tansanee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Busarakhan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Kannika&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boonsri&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sakda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;China&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Boonsong Lekagul waterways readings.csv+ (Multiple Connections)' name='federated.0nqcnkb15dm9jf1db1baw1qn42dv' />
          </datasources>
          <datasource-dependencies datasource='federated.0nqcnkb15dm9jf1db1baw1qn42dv'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[sample date]' derivation='None' name='[none:sample date:nk]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='None' name='[none:value:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[sample date]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]'>
            <groupfilter expression='COUNT([value]) &gt; 2' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]' direction='ASC' using='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[sum:value:qk]'>
            <groupfilter function='member' level='[none:measure:nk]' member='&quot;Acenaphthene&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </computed-sort>
          <filter class='categorical' column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:measure:nk]' member='&quot;1,2,3-Trichlorobenzene&quot;' />
              <groupfilter function='member' level='[none:measure:nk]' member='&quot;Acenaphthene&quot;' />
              <groupfilter from='&quot;AGOC-3A&quot;' function='range' level='[none:measure:nk]' to='&quot;Barium&quot;' />
              <groupfilter function='member' level='[none:measure:nk]' member='&quot;Benzo(b)fluoranthene&quot;' />
              <groupfilter from='&quot;beta-Hexaxchlorocyclohexane&quot;' function='range' level='[none:measure:nk]' to='&quot;Chromium&quot;' />
              <groupfilter from='&quot;Copper&quot;' function='range' level='[none:measure:nk]' to='&quot;Fecal streptococci&quot;' />
              <groupfilter from='&quot;gamma-Hexachlorocyclohexane&quot;' function='range' level='[none:measure:nk]' to='&quot;PAHs&quot;' />
              <groupfilter function='member' level='[none:measure:nk]' member='&quot;Petroleum hydrocarbons&quot;' />
              <groupfilter function='member' level='[none:measure:nk]' member='&quot;Potassium&quot;' />
              <groupfilter from='&quot;Selenium&quot;' function='range' level='[none:measure:nk]' to='&quot;Zinc&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:value:qk]' included-values='in-range'>
            <min>0.02</min>
            <max>37959.279999999999</max>
          </filter>
          <slices>
            <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:value:qk]</column>
            <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</column>
            <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[avg:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</rows>
        <cols>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]</cols>
        <pages>
          <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:sample date:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Boonsong Lekagul waterways readings.csv+ (Multiple Connections)' name='federated.0nqcnkb15dm9jf1db1baw1qn42dv' />
          </datasources>
          <datasource-dependencies datasource='federated.0nqcnkb15dm9jf1db1baw1qn42dv'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]'>
            <groupfilter expression='AVG([value]) &gt; 20.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]'>
            <groupfilter expression='AVG([value]) &gt; 20.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:measure:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</column>
            <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[avg:value:qk]</rows>
        <cols>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Boonsong Lekagul waterways readings.csv+ (Multiple Connections)' name='federated.0nqcnkb15dm9jf1db1baw1qn42dv' />
          </datasources>
          <datasource-dependencies datasource='federated.0nqcnkb15dm9jf1db1baw1qn42dv'>
            <column datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column datatype='date' name='[sample date]' role='dimension' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sample date]' derivation='Year-Trunc' name='[tyr:sample date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]'>
            <groupfilter function='member' level='[none:measure:nk]' member='&quot;Aldrin&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[sum:value:qk]</rows>
        <cols>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[tyr:sample date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[avg:value:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;2-Sep-10&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]</field>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</field>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:sample date:nk]</field>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:location:nk]</field>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</field>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:sample date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:measure:nk]</field>
            <field>[federated.0nqcnkb15dm9jf1db1baw1qn42dv].[none:sample date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      DxzIDR6wwhwcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
